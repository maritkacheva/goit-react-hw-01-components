{"version":3,"sources":["components/Profile/Profile.module.css","components/PricingPlan/PricingPlan.module.css","components/Stats/Stats.module.css","components/TransactionHistory/TransactionHistory.module.css","assets/profile.js","components/Profile/Profile.js","components/Stats/ransomColor.js","components/Stats/Stats.js","assets/stats.js","components/PricingPlan/PricingItem.js","components/PricingPlan/PricingPlan.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","user","name","tag","location","avatar","stats","followers","views","likes","Profile","className","styles","profile","description","src","alt","width","list","label","quantity","getRandomColor","Math","round","random","Stats","title","statsSection","statList","map","stat","item","key","id","style","backgroundColor","percentage","defaultProps","PricingItem","icon","capacity","price","pricingItem","backgroundImage","type","button","PricingPlan","items","pricingPlan","TransactionHistory","transactionHistory","tableHead","tableBody","amount","currency","App","pricingPlanItems","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42e02686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3M3In\",\"description\":\"Profile_description__13XNb\",\"avatar\":\"Profile_avatar__2aTmv\",\"name\":\"Profile_name__2UZ7v\",\"tag\":\"Profile_tag__1hzF9\",\"location\":\"Profile_location__2bh7v\",\"stats\":\"Profile_stats__2PlZb\",\"list\":\"Profile_list__1ZKzv\",\"label\":\"Profile_label__3tSp2\",\"quantity\":\"Profile_quantity__dTqH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pricingPlan\":\"PricingPlan_pricingPlan__18KeH\",\"item\":\"PricingPlan_item__KGEQi\",\"divIcon\":\"PricingPlan_divIcon__3oq_3\",\"label\":\"PricingPlan_label__1YaZf\",\"capacity\":\"PricingPlan_capacity__WiqWo\",\"description\":\"PricingPlan_description__3dD3d\",\"price\":\"PricingPlan_price__Ud4qg\",\"icon\":\"PricingPlan_icon__hLci4\",\"button\":\"PricingPlan_button__1qv5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__1u5P6\",\"title\":\"Stats_title__15gKM\",\"statList\":\"Stats_statList__3wRbr\",\"item\":\"Stats_item__1lh-a\",\"label\":\"Stats_label__3O9Mq\",\"percentage\":\"Stats_percentage__1WVO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__T4Vb-\",\"tableHead\":\"TransactionHistory_tableHead__hHaRo\",\"tableBody\":\"TransactionHistory_tableBody__2ZWb5\"};","const user = {\n  name: \"Jacques Gluke\",\n  tag: \"@jgluke\",\n  location: \"Ocho Rios, Jamaica\",\n  avatar: \"https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg\",\n  stats: {\n    followers: 5603,\n    views: 4827,\n    likes: 1308\n  }\n};\n\nexport default user;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\n\nconst Profile = ({ user: { name, avatar, tag, location, stats = {} } }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img\n        src={avatar}\n        alt=\"user avatar\"\n        width=\"250\"\n        className={styles.avatar}\n      />\n      <p className={styles.name}> {name} </p>\n      <p className={styles.tag}> {tag}</p>\n      <p className={styles.location}> {location} </p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.list}>\n        <span className={styles.label}>Followers </span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li className={styles.list}>\n        <span className={styles.label}>Views </span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li className={styles.list}>\n        <span className={styles.label}>Likes </span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  user: PropTypes.shape({\n    alt: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default Profile;\n","const getRandomColor = () => {\n  const color = `rgb(${Math.round(Math.random() * 255)},${Math.round(\n    Math.random() * 255\n  )},${Math.round(Math.random() * 255)})`;\n\n  return color;\n};\n\nexport default getRandomColor;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Stats.module.css\";\nimport getRandomColor from \"./ransomColor\";\n\nconst Stats = ({ stats, title }) => (\n  <section>\n    {title ? (\n      <section className={styles.statsSection}>\n        <h2 className={styles.title}>{title}</h2>\n        <ul className={styles.statList}>\n          {stats.map(stat => (\n            <li\n              className={styles.item}\n              key={stat.id}\n              style={{ backgroundColor: getRandomColor() }}\n            >\n              <span className={styles.label}>{stat.label}</span>\n              <span className={styles.percentage}>{stat.percentage}</span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    ) : (\n      <ul className={styles.statList}>\n        {stats.map(stat => (\n          <li\n            className={styles.item}\n            key={stat.id}\n            style={{ backgroundColor: getRandomColor() }}\n          >\n            <span className={styles.label}>{stat.label}</span>\n            <span className={styles.percentage}>{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    )}\n  </section>\n);\n\nStats.defaultProps = {\n  title: \"\"\n};\n\nStats.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired\n    }).isRequired\n  ).isRequired\n};\n\nexport default Stats;\n","const stats = [\n  { id: \"id-1\", label: \".docx\", percentage: 22 },\n  { id: \"id-2\", label: \".pdf\", percentage: 4 },\n  { id: \"id-3\", label: \".mp3\", percentage: 17 },\n  { id: \"id-4\", label: \".psd\", percentage: 47 },\n  { id: \"id-5\", label: \".pdf\", percentage: 10 }\n];\n\nexport default stats;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./PricingPlan.module.css\";\n\nconst PricingItem = ({ label, icon, capacity, price, description }) => (\n  <div className={styles.pricingItem}>\n    <i className={styles.icon} style={{ backgroundImage: `url(${icon})` }} />\n    <h2 className={styles.label}>{label}</h2>\n    <p className={styles.capacity}>{capacity}</p>\n    <p className={styles.description}>{description}</p>\n    <p className={styles.price}>${price}/MO</p>\n    <button type=\"button\" className={styles.button}>\n      Get Started\n    </button>\n  </div>\n);\n\nPricingItem.defaultProps = {\n  icon: \"icon ulr\"\n};\n\nPricingItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  capacity: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired\n};\n\nexport default PricingItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PricingItem from \"./PricingItem\";\nimport styles from \"./PricingPlan.module.css\";\n\nconst PricingPlan = ({ items }) => (\n  <ul className={styles.pricingPlan}>\n    {items.map(item => (\n      <li className={styles.item} key={item.label}>\n        <PricingItem\n          icon={item.icon}\n          label={item.label}\n          capacity={item.capacity}\n          price={item.price}\n          description={item.description}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nPricingPlan.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      icon: PropTypes.string,\n      capacity: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired\n    })\n  ).isRequired\n};\n\nexport default PricingPlan;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TransactionHistory.module.css\";\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr className={styles.tableHead}>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => {\n        return (\n          <tr key={item.id} className={styles.tableBody}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport user from \"../assets/profile\";\nimport Profile from \"./Profile/Profile\";\nimport Stats from \"./Stats/Stats\";\nimport stats from \"../assets/stats\";\nimport pricingPlanItems from \"../assets/pricing-plan.json\";\nimport PricingPlan from \"./PricingPlan/PricingPlan\";\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\nimport transactions from \"../assets/transactions.json\";\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Stats stats={stats} title=\"Upload stats\" />\n    <PricingPlan items={pricingPlanItems} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}